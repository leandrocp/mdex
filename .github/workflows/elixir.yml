name: Elixir CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test:
    name: test (OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})

    env:
      MIX_ENV: test
      MDEX_BUILD: 1

    strategy:
      matrix:
        include:
          - elixir: "1.12.0"
            otp: "23"

          - elixir: "1.16"
            otp: "26"

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache mix deps
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-

      - run: mix deps.get
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: mix test

  quality:
    name: quality (OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})

    env:
      MIX_ENV: dev
      MDEX_BUILD: 1

    strategy:
      matrix:
        include:
          - elixir: "1.16"
            otp: "26"

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache mix deps
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ env.MIX_ENV }}-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-

      - run: mix deps.get
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: mix compile --warnings-as-errors

      - run: mix format --check-formatted

      - run: mix deps.unlock --check-unused
